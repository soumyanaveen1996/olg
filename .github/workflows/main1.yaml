name: OLG Build and Deploy

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Select build type'
        required: true
        default: 'dev-olg'
        options:
          - 'dev_frontm'
          - 'dev_olg'
          - 'prod_frontm'
          - 'prod_olg'
      build_description:
        description: 'Description of the build'
        required: true
        type: string
      docker_tags:
        description: 'Tags for Docker images (comma-separated)'
        required: true
        type: string
      branch_type:
        description: 'Type the required branch'
        required: true
        type: string

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
   

    
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Increment version in package.json
        id: increment-version
        run: |
           cd webapp
           current_version=$(jq -r '.version' package.json)
           new_version=$(echo $current_version | awk -F. -v OFS=. '{print $1,$2,$3+1}')
           jq --arg new_version "$new_version" '.version = $new_version' package.json > package.json.tmp
           mv package.json.tmp package.json
           echo "::set-output name=new_version::$new_version"
           echo "New_version=$new_version"
      - name: Commit version update
        run: |
          git config --global user.email "${{ secrets.GIT_EMAIL }}"
          git config --global user.name "${{ secrets.GIT_USERNAME }}"
          git add webapp/package.json
          git commit -m "Increment version"
          git push origin master
      

    
     
       
      - name: Build Docker images
        run: docker-compose -f compose.yaml build
        
      - name: Tag the Images
        run: |
          docker tag edge:latest soumyanaveen/edge:${{ github.event.inputs.docker_tags }}
          docker tag webapp:latest soumyanaveen/webapp:${{ github.event.inputs.docker_tags }}
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker Images to Docker Hub
        run: |
           docker push soumyanaveen/webapp:${{ github.event.inputs.docker_tags}}
           docker push soumyanaveen/edge:${{ github.event.inputs.docker_tags}}
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID_DEV }}
          aws-region: us-east-1
          
   
      - name: Build & Deploy
        env:
            PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
            HOSTNAME: ${{secrets.SSH_HOST}}
            USER_NAME: ${{secrets.USER_NAME}}
      
