name: OLG Build and Deploy
 
on:
 workflow_dispatch:
 
inputs:
  build_type:
    required: true
    type: string
  build_description:
    required: true
    type: string
  docker_tags:
    required: true
    type: string
 
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
 
      - name: Get version number
        run: |
          VERSION=$(grep version webapp/package.json | cut -d':' -f2 | tr -d '[:space:]')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
 
      - name: Update version (replace with actual command)
        run: |
          sed -i "s/\"version\":.*/\"version\": \"$VERSION\"/" webapp/package.json
 
      - name: Copy API Key
        run: cp .api_key.json olg/edge
 
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
 
      - name: Build Docker Images
        run: docker-compose build
 
      - name: Tag and Push Images
        run: |
          for image in edge webapp; do
            docker tag $image:$VERSION ${{ inputs.docker_tags }}
            docker push ${{ inputs.docker_tags }}/$image:$VERSION
          done
 
      - name: Generate Updated Docker Compose File
        run: |
          echo "version: '3.8'" > docker-compose.yml
          echo "services:" >> docker-compose.yml
          for service in webapp edge redis mongo; do
            image_tag=${{ inputs.docker_tags }}/$(docker-compose config | grep -w $service | awk '{print $NF}')
            echo "  $service:" >> docker-compose.yml
            echo "    image: $image_tag" >> docker-compose.yml
          done
