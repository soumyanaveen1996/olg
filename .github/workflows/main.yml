name: OLG Application Pipeline

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Select build type'
        required: true
        default: 'dev_olg'
        options:
          - 'dev_frontm'
          - 'dev_olg'
          - 'prod_frontm'
          - 'prod_olg'

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Increment version in package.json
        run: |
           cd webapp
           current_version=$(jq -r '.version' package.json)
           new_version=$(echo $current_version | awk -F. '{$NF+=1; OFS="."; print $0}')
           jq --arg new_version "$new_version" '.version = $new_version' package.json > package.json.tmp
           mv package.json.tmp package.json


      - name: Copy .api_key.json file
        run: |
            touch ./edge/.api_key.json
            cp  ${{ secrets.API_KEY }} ./edge/.api_key.json

      - name: Build Docker Images
        run: |
          ./build.sh ${{ github.event.inputs.build_type }}
          rm edge/.api_key.json
 #       working-directory: ${{ github.workspace }}
    
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
          aws-region: us-east-1
          
      - name: Upload build artifacts to S3
        run: |
           current_timestamp=$(date +"%m%d%Y%H%M")
           aws s3 cp out.zip s3://olg-docker/out-${current_timestamp}.zip

      - name: SSH Deploy to EC2 Instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.EC2_SSH_PORT }}
          script: |
            # Backup existing docker builds
            cp out.zip previousZipFiles/"out_$(date +'%Y%m%d%H').zip"
            mv out previousOutFolders/"out_$(date +'%Y%m%d%H')"

            # Deploy new build
            aws s3 cp s3://olg-docker/out-${current_timestamp}.zip out.zip
            sudo unzip out.zip .
            cd ./out
            sudo docker load --input ./out.tar
            sudo docker-compose up -d
