name: OLG Application Pipeline

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Select build type'
        required: true
        default: 'dev_olg'
        options:
          - value: 'dev_frontm'
            description: 'Development build for Frontm'
          - value: 'dev_olg'
            description: 'Development build for OLG'
          - value: 'prod_frontm'
            description: 'Production build for Frontm'
          - value: 'prod_olg'
            description: 'Production build for OLG'

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Increment version in package.json
        run: |
           cd webapp
           current_version=$(jq -r '.version' package.json)
           new_version=$(echo $current_version | awk -F. '{$NF+=1; OFS="."; print $0}')
           jq --arg new_version "$new_version" '.version = $new_version' package.json > package.json.tmp
           mv package.json.tmp package.json



      - name: Copy .api_key.json to olg/edge folder
        run: cp .api_key.json olg/edge/
      - name: Build Docker images
        run: docker-compose -f path/to/your/docker-compose.yml build
           current_version=$(jq -r '.version' package.json)
           new_version=$(echo $current_version | awk -F. '{$NF+=1; OFS="."; print $0}')
           jq --arg new_version "$new_version" '.version = $new_version' package.json > package.json.tmp
           mv package.json.tmp package.json



      - name: Copy .api_key.json to olg/edge folder
        run: cp .api_key.json olg/edge/

       - name: Build Docker images
         run: docker-compose -f path/to/your/docker-compose.yml build
