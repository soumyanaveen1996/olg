name: Build and Push Docker Images

on:
  push:
    branches:
      - main
    paths:
      - 'docker-compose.yml'
      - 'edge/Dockerfile'
      - 'webapp/Dockerfile'

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    inputs:
      build_type:
        description: 'Type of build (e.g., production, staging)'
        required: true
      build_description:
        description: 'Description of the build'
        required: true
      edge_tags:
        description: 'Tags for Edge image (comma-separated)'
        required: true
      webapp_tags:
        description: 'Tags for Web App image (comma-separated)'
        required: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Fetch latest Git tag
        id: git_tag
        run: echo ::set-output name=TAG::$(git describe --tags $(git rev-list --tags --max-count=1))

      - name: Set Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push images
        run: |
          docker-compose build --build-arg GIT_TAG=${{ steps.git_tag.outputs.TAG }}
          docker-compose push

      - name: Tag Docker Image
        run: |
          IFS=',' read -ra edge_tags_array <<< "${{ inputs.edge_tags }}"
          for tag in "${edge_tags_array[@]}"; do
            docker tag yourdockerhubusername/edge-app:latest yourdockerhubusername/edge-app:${tag}
          done

          IFS=',' read -ra webapp_tags_array <<< "${{ inputs.webapp_tags }}"
          for tag in "${webapp_tags_array[@]}"; do
            docker tag yourdockerhubusername/web-app:latest yourdockerhubusername/web-app:${tag}
          done

      - name: Push Tagged Images
        run: |
          docker push soumyanaveen/edge-app:${{ inputs.edge_tags }}
          docker push soumyanaveen/web-app:${{ inputs.webapp_tags }}

      - name: Update Build Info
        run: |
          echo "Build Type: ${{ inputs.build_type }}, Description: ${{ inputs.build_description }}" >> build-info.txt


     
          
